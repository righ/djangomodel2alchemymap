name: build
on:
  - push

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:12-master
        env:
          POSTGRES_USER: d2a
          POSTGRES_PASSWORD: d2a
          POSTGRES_DB: d2a
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      mysql:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: d2a
          MYSQL_USER: d2a
          MYSQL_PASSWORD: d2a
        ports:
          - 3306/tcp
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.5", "3.9"]
        django-version: ["2.2.9", "3.1.1"]
        alchemy-version: ["1.1.0", "1.3.19"]
        exclude:
          - { python-version: 3.5, django-version: 3.1.1 }

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: sudo apt-get install python3-dev libmysqlclient-dev libpq-dev gdal-bin
      - run: echo "Django==${{ matrix.django-version }}" > requirements/django.txt
      - run: echo "SQLAlchemy==${{ matrix.alchemy-version }}" > requirements/sqlalchemy.txt
      - run: pip install tox
      - run: |
          mysql -ud2a -pd2a \
                --host 127.0.0.1 \
                --port ${{ job.services.mysql.ports['3306'] }} \
                -e " \
                  SET character_set_client=utf8; \
                  SET character_set_connection=utf8; \
                  SET character_set_database=utf8; \
                  SET character_set_results=utf8; \
                  SET character_set_server=utf8; \
                  ALTER DATABASE d2a CHARACTER SET utf8; \
                  SHOW VARIABLES like 'char%'; \
                "
      - run: tox -- -vv
        env:
          DB_HOST: 127.0.0.1
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
          MYSQL_USER: root
          MYSQL_PASSWORD: root

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    name: pypi upload
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install requirements for upload.
        run: pip install -U setuptools wheel twine

      - name: Build dists.
        run: ./setup.py sdist bdist_wheel

      - name: Upload dists.
        run: twine upload dist/* --non-interactive --skip-existing
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
